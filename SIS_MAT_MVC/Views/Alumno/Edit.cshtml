﻿@model SIS_MAT_MVC.Models.AlumnoModel
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Alumno.Id_alum)
	<div class="row">
		<div class="col-md-6">
			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Foto_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@if (Model.Alumno.Foto_alum != null)
					{
						<img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Alumno.Foto_alum))" alt="Imagen" style="width: 200px; height: 200px;" />
					}
					else
					{
						<span>-</span>
					}
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Foto_alum, htmlAttributes: new { @class = "control-label" })

				<div class="custom-file">
					<input type="file" name="foto" id="foto" accept="image/*" capture class="custom-file-input form-control">
				</div>

				@Html.ValidationMessageFor(model => model.Alumno.Foto_alum, "", new { @class = "text-danger" })
			</div>


			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Ape_Alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Ape_Alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Ape_Alum, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Dir_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Dir_alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Dir_alum, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Dni_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Dni_alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Dni_alum, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Email_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Email_alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Email_alum, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Est_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@{
						var estadoSeleccionado = Model?.Alumno?.Est_alum;
					}
					@Html.DropDownListFor(model => model.Alumno.Est_alum, new SelectList(new[]
					{
									new SelectListItem { Text = "Activo", Value = "1" },
									new SelectListItem { Text = "Inactivo", Value = "0" }
					}, "Value", "Text", estadoSeleccionado), "-- Seleccione --", new { @class = "form-control" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Fec_nac, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextBoxFor(model => model.Alumno.Fec_nac, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
					@Html.ValidationMessageFor(model => model.Alumno.Fec_nac, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="col-md-6">
			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Nom_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Nom_alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Nom_alum, "", new { @class = "text-danger" })
				</div>
			</div>


			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@{
						var sexoSeleccionado = Model?.Alumno?.Sexo;
					}
					@Html.DropDownListFor(model => model.Alumno.Sexo, new SelectList(new[]
					{
									new SelectListItem { Text = "Masculino", Value = "M" },
									new SelectListItem { Text = "Femenino", Value = "F" }
					}, "Value", "Text", sexoSeleccionado), "-- Seleccione --", new { @class = "form-control" })
				</div>
			</div>


			<div class="form-group">
				@Html.LabelFor(model => model.Alumno.Tel_alum, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Alumno.Tel_alum, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Alumno.Tel_alum, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Ubigeo.Departamentos, htmlAttributes: new { @class = "control-label" })
				@Html.DropDownListFor(model => model.Ubigeo.IdDepa, new SelectList(Model.Ubigeo.Departamentos, "IdDepa", "Departamento", Model.Alumno?.Id_Ubigeo.Substring(0, 2)), "-- Seleccione Departamento --", new { @class = "form-control" })
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Ubigeo.Provincias, htmlAttributes: new { @class = "control-label" })
				@Html.DropDownListFor(model => model.Ubigeo.IdProv, new SelectList(Model.Ubigeo.Provincias, "IdProv", "Provincia", Model.Alumno?.Id_Ubigeo.Substring(2, 2)), "-- Seleccione Provincia --", new { @class = "form-control" })
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Ubigeo.Distritos, htmlAttributes: new { @class = "control-label" })
				@Html.DropDownListFor(model => model.Ubigeo.IdDis, new SelectList(Model.Ubigeo.Distritos, "IdDis", "Distrito", Model.Alumno?.Id_Ubigeo.Substring(4, 2)), "-- Seleccione Distrito --", new { @class = "form-control" })
			</div>

		</div>
	</div>
		
		<script>
    $(document).ready(function () {
        // Handle the change event for the Departamentos dropdown
        $("#Ubigeo_IdDepa").change(function () {
            var departamentoId = $(this).val();
            var provinciaDropdown = $("#Ubigeo_IdProv");
            var distritoDropdown = $("#Ubigeo_IdDis");

            // Call a function to populate the Provincias dropdown based on the selected Departamento
            populateProvincias(departamentoId, provinciaDropdown, distritoDropdown);
        });

        // Handle the change event for the Provincias dropdown
        $("#Ubigeo_IdProv").change(function () {
            var departamentoId = $("#Ubigeo_IdDepa").val();
            var provinciaId = $(this).val();
            var distritoDropdown = $("#Ubigeo_IdDis");

            // Call a function to populate the Distritos dropdown based on the selected Departamento and Provincia
            populateDistritos(departamentoId, provinciaId, distritoDropdown);
        });

        // Function to populate the Provincias dropdown based on the selected Departamento
        function populateProvincias(departamentoId, provinciaDropdown, distritoDropdown) {
            $.ajax({
                url: "@Url.Action("Ubigeo_ProvinciasDepartamento", "Alumno")",
                data: { strIdDepartamento: departamentoId },
                type: "GET",
                dataType: "json",
                success: function (data) {
                    // Populate the Provincias dropdown with the retrieved data
                    provinciaDropdown.empty();
                    $.each(data, function (index, item) {
                        provinciaDropdown.append($("<option></option>").val(item.IdProv).html(item.Provincia));
                    });

                    // Add a default option
                    provinciaDropdown.prepend($("<option></option>").val("").html("-- Seleccione Provincia --"));

                    // Update the Distritos dropdown when the Provincias dropdown changes
                    var provinciaId = provinciaDropdown.val();
                    populateDistritos(departamentoId, provinciaId, distritoDropdown);
                },
                error: function (error) {
                    console.log("Error: " + error.statusText);
                }
            });
        }

        // Function to populate the Distritos dropdown based on the selected Departamento and Provincia
        function populateDistritos(departamentoId, provinciaId, distritoDropdown) {
            $.ajax({
                url: "@Url.Action("Ubigeo_DistritosProvinciaDepartamento", "Alumno")",
                data: { strIdDepartamento: departamentoId, strIdProvincia: provinciaId },
                type: "GET",
                dataType: "json",
                success: function (data) {
                    // Populate the Distritos dropdown with the retrieved data
                    distritoDropdown.empty();
                    $.each(data, function (index, item) {
                        distritoDropdown.append($("<option></option>").val(item.IdDis).html(item.Distrito));
                    });

                    // Add a default option
                    distritoDropdown.prepend($("<option></option>").val("").html("-- Seleccione Distrito --"));
                },
                error: function (error) {
                    console.log("Error: " + error.statusText);
                }
            });
        }
    });
		</script>


		<div class="form-group mt-4">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Editar" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div class="mt-2">
	@Html.ActionLink("Back to List", "Alumnos")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}